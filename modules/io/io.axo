module(
  name: "io"
  author: "mightypancake"
  description: "I/O module"
)

#include <stdio.h>

#typ FILE
#typ fpos_t

#provided (int fn @FILE) fclose
#provided (fn @FILE) clearerr
#provided (int fn @FILE) feof
#provided (int fn @FILE) ferror
#provided (int fn @FILE) fflush
#provided (int fn @FILE, @fpos_t) fgetpos
#provided (@FILE fn @byte, @byte) fopen
#provided (size_t fn @byte, size_t, size_t, @FILE) fread
#provided (@FILE fn @FILE, @byte, @FILE) freopen
#provided (int fn @FILE, i64, int) fseek
#provided (int fn @FILE, @fpos_t) fsetpos
#provided (i64 fn @FILE) ftell
#provided (size_t fn @byte, size_t, size_t, @FILE) fwrite
#provided (int fn @byte) remove
#provided (int fn @byte, @byte) rename
#provided (fn @FILE) rewind
#provided (fn @FILE, @byte) setbuf
#provided (int fn @FILE, @byte, int, size_t) setvbbuf
#provided (@FILE fn) tmpfile
#provided (@byte fn @byte) nmpnam
#provided (int fn @FILE, @byte, ...) fprintf
#provided (int fn @byte, ...) printf
#provided (int fn @byte, @byte, ...) sprintf
#provided (int fn @FILE, @byte, va_list) vfprintf
#provided (int fn @FILE, va_list) vprintf
#provided (int fn @FILE, @byte, va_list)  vsprintf
#provided (int fn @FILE, @byte, ...) fscanf
#provided (int fn @byte, ...) scanf
#provided (int fn @byte, @byte, ...) sscanf
#provided (int fn @FILE) fgetc
#provided (@byte fn @byte, int, @FILE) fgets
#provided (int fn int, @FILE) fputc
#provided (int fn @byte, @FILE) fputs
#provided (int fn @FILE) getc
#provided (int fn) getchar
#provided (@byte fn @byte) gets
#provided (int fn int, @FILE) putc
#provided (int fn int) putchar
#provided (int fn @byte) puts
#provided (int fn int, @FILE) ungetc
#provided (fn @byte) perror

#provided @FILE stderr
#provided @FILE stdin
#provided @FILE stdout

struct file (
  @FILE    file
)

file fn io.open(@byte filename, @byte mode="r", @error errptr){
  f = file{file=fopen(filename, mode)}
  errptr:get_c()
  ret f
}

fn error:oops(){
  if !($..code) ret;
	printf("%sError: %s%s\n", aesc^red, $..msg, aesc^reset)
	exit($..code)
}

