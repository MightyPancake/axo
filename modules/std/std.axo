module(
	name: "std"
	// prefix: "axo__"
	version: "0.0.1"
	author: "mightypancake"
	website: "https://axolang.com"
	license_name: "Apache 2.0"
	license: "https://www.apache.org/licenses/LICENSE-2.0.txt"
	description: "Axo standard library. This mostly reuses C stdlib."
)

use aesc
use io
use time
use str

#include <stdlib.h>
#include <stdbool.h>
#provided bool true
#provided bool false

// Memory allocation
#provided (@none fn size_t) malloc
#provided (@none fn @none, size_t) realloc
#provided (none fn @none) free

// Process control
#provided (int fn @byte) system
#provided (none fn int) exit
#provided (int fn none) atexit

// Environment
#provided (int fn none) getenv
#provided (int fn @byte, @byte) setenv
#provided (int fn @byte) unsetenv
#provided (int fn none) clearenv

// Sorting and searching
#provided (none fn @none, size_t, size_t, @int) qsort
#provided (@none fn @none, @none, size_t, size_t, @int) bsearch

// Pseudo-random number generation
#provided (int fn) rand
#provided (none fn u32) srand

// Integer arithmetic
#provided (int fn @byte, @byte, int) abs
#provided (i64 fn @byte, @byte, i64) labs
// #provided (long long fn @byte, @byte, long long) llabs

// Multibyte string conversion
#provided (int fn @byte, @byte, @byte, int) mbtowc
#provided (int fn @byte, @byte, @byte) mbstowcs
#provided (int fn @byte, @byte, @byte, int) wctomb
#provided (int fn @byte, @byte, @byte) wcstombs

// Conversion
#provided (int fn @byte, @byte) atoi
#provided (i64 fn @byte, @byte) atol
// #provided (long long fn @byte, @byte) atoll
#provided (f64 fn @byte, @byte) atof
#provided (int fn @byte, @byte, @byte) strtol
#provided (u64 fn @byte, @byte, @byte) strtoul
// #provided (long long fn @byte, @byte, @byte) strtoll
#provided (u64 fn @byte, @byte, @byte) strtoull
#provided (f64 fn @byte, @byte, @byte) strtod
#provided (f32 fn @byte, @byte, @byte) strtof
// #provided (long double fn @byte, @byte, @byte) strtold

// Memory management
#provided (@none fn size_t) calloc

// Process management
#provided (int fn none) abort
#provided (int fn none) _Exit

// Mathematical functions
#provided (int fn @byte) div
#provided (i64 fn @byte) ldiv
// #provided (long long fn @byte) lldiv

// Temporary files
#provided (@byte fn @byte) mktemp
#provided (int fn @byte) mkstemp
#provided (@FILE fn @byte, @byte) tmpfile
#provided (@byte fn @byte) tmpnam

// Miscellaneous
#provided (int fn) rand_r
#provided (int fn @byte) realpath
#provided (int fn @byte, @byte, int, int) mkfifo

fn std.seed_rand(u32 seed=time^now().(u32)){
	srand(seed)
	ret 0
}

fn std.rand(){
	ret rand()
}

fn print_module(axo_module mod){
	printf("name: %s\nprefix: %s\nversion: %s\nauthor: %s\nwebsite: %s\nlicense_name: %s\nlicense: %s\ndescription: %s\n",
	mod.name, mod.prefix, mod.version, mod.author, mod.website, mod.license_name, mod.license, mod.description)
	ret 0
}

//Include common modules
use aesc
use mem
